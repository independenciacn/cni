<?xml version="1.0" encoding="UTF-8"?>
    <project name="cni" default="build">
     <target name="build"
       depends="prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdoc,phpcb"/>

     <target name="build-parallel"
       depends="prepare,lint,tools-parallel,phpcb"/>

     <target name="tools-parallel" description="Run tools in parallel">
      <parallel threadCount="2">
       <sequential>
        <antcall target="pdepend"/>
        <antcall target="phpmd-ci"/>
       </sequential>
       <antcall target="phpcpd"/>
       <antcall target="phpcs-ci"/>
       <antcall target="phploc"/>
       <antcall target="phpdoc"/>
      </parallel>
     </target>

     <target name="clean" description="Cleanup build artifacts">
      <delete dir="${basedir}/build/api"/>
      <delete dir="${basedir}/build/code-browser"/>
      <delete dir="${basedir}/build/coverage"/>
      <delete dir="${basedir}/build/logs"/>
      <delete dir="${basedir}/build/pdepend"/>
     </target>

     <target name="prepare" depends="clean" description="Prepare for build">
      <mkdir dir="${basedir}/build/api"/>
      <mkdir dir="${basedir}/build/code-browser"/>
      <mkdir dir="${basedir}/build/coverage"/>
      <mkdir dir="${basedir}/build/logs"/>
      <mkdir dir="${basedir}/build/pdepend"/>
      <mkdir dir="${basedir}/build/phpdoc"/>
     </target>

     <target name="lint" description="Perform syntax check of sourcecode files">
      <apply executable="php" failonerror="true">
       <arg value="-l" />

       <fileset dir="${basedir}">
        <include name="**/*.php" />
        <modified />
       </fileset>
      </apply>
     </target>

     <target name="phploc" description="Measure project size using PHPLOC">
      <exec executable="phploc">
       <arg value="--exclude"/> 
       <arg path="${basedir}/build/,${basedir}/inc/ezpdf/,${basedir}/entradas2/jpgraph/"/>
       <arg value="--log-csv" />
       <arg path="${basedir}/build/logs/phploc.csv" />
       <arg path="${basedir}" />
      </exec>
     </target>

     <target name="pdepend" description="Calculate software metrics using PHP_Depend">
      <exec executable="pdepend">
      <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
      <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
      <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
      <arg value="--ignore=${basedir}/build,${basedir}/inc/ezpdf,${basedir}/entradas2/jpgraph" />   
      <arg path="${basedir}" />
      </exec>
     </target>

     <target name="phpmd"
             description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
      <exec executable="phpmd">
       <arg path="${basedir}" />
       <arg value="text" />
       <arg value="codesize,design,naming,unusedcode"/>
       <arg value="--exclude" /> 
       <arg path="${basedir}/build/,${basedir}/inc/ezpdf/,${basedir}/entradas2/jpgraph/" /> 
      </exec>
     </target>

     <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
      <exec executable="phpmd">
       <arg path="${basedir}" />
       <arg value="xml" />
       <arg value="codesize,design,naming,unusedcode"/>
       <arg value="--reportfile" />
       <arg path="${basedir}/build/logs/pmd.xml" />
       <arg value="--exclude"/> 
       <arg path="${basedir}/build/,${basedir}/inc/ezpdf/,${basedir}/entradas2/jpgraph/"/>
      </exec>
     </target>

     <target name="phpcs"
             description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
      <exec executable="phpcs">
        <arg value="--ignore=${basedir}/build/,${basedir}/inc/ezpdf/,${basedir}/entradas2/jpgraph/"/>
        <arg value="-v" />
        <arg value="--standard=PSR" />
        <arg value="--encoding=UTF-8" />        
        <arg path="${basedir}" />
      </exec>
     </target>

     <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
      <exec executable="phpcs" output="/dev/null">
       <arg value="--ignore=${basedir}/build/,${basedir}/inc/ezpdf/,${basedir}/entradas2/jpgraph/"/>
       <arg value="--report=checkstyle" />
       <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
       <arg value="-v" />
       <arg value="--standard=PSR" />
       <arg value="--encoding=UTF-8" />
       <arg path="${basedir}" />
      </exec>
     </target>

     <target name="phpcpd" description="Find duplicate code using PHPCPD">
      <exec executable="phpcpd">
       <arg value="--log-pmd" />
       <arg path="${basedir}/build/logs/pmd-cpd.xml" />
       <arg value="--exclude" />
       <arg path="${basedir}/build/"/>
       <arg value="--exclude" />
        <arg path="${basedir}/inc/ezpdf/"/>
       <arg value="--exclude" />
        <arg path="${basedir}/entradas2/jpgraph/"/>
       <arg path="${basedir}" />
      </exec>
     </target>

    <target name="phpdoc" description="Generate API documentation using PHPDocumentor">
        <exec executable="phpdoc">
               <arg line="-d . -t ${basedir}/build/api --ignore ${basedir}/build/*,${basedir}/inc/ezpdf/*,${basedir}/entradas/jpgraph/*" />
        </exec>
    </target>


     <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
      <exec executable="phpcb">
       <arg value="--exclude"/>
       <arg path="${basedir}/build/,${basedir}/inc/ezpdf/,${basedir}/entradas2/jpgraph/" />
       <arg value="--log" />
       <arg path="${basedir}/build/logs" />
       <arg value="--source" />
       <arg path="${basedir}" />
       <arg value="--output" />
       <arg path="${basedir}/build/code-browser" />
      </exec>
     </target>
    </project>